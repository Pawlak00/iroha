import os
import binascii
from iroha import IrohaCrypto
from iroha import Iroha, IrohaGrpc
import sys
from Crypto.Hash import keccak
import integration_helpers

if sys.version_info[0] < 3:
    raise Exception("Python 3 or a more recent version is required.")

# Here is the information about the environment and admin account information:
IROHA_HOST_ADDR = os.getenv("IROHA_HOST_ADDR", "127.0.0.1")
IROHA_PORT = os.getenv("IROHA_PORT", "50051")
ADMIN_ACCOUNT_ID = os.getenv("ADMIN_ACCOUNT_ID", "admin@test")
ADMIN_PRIVATE_KEY = os.getenv(
    "ADMIN_PRIVATE_KEY",
    "7e00405ece477bb6dd9b03a78eee4e708afc2f5bcdce399573a5958942f4a390",
)

iroha = Iroha(ADMIN_ACCOUNT_ID)
net = IrohaGrpc("{}:{}".format(IROHA_HOST_ADDR, IROHA_PORT))

test_private_key = IrohaCrypto.private_key()
test_public_key = IrohaCrypto.derive_public_key(test_private_key).decode("utf-8")


@integration_helpers.trace
def create_contract(bytecode): 
    """Bytecode was generated using remix editor  https://remix.ethereum.org/ from file account.sol. """
    tx = iroha.transaction(
        [iroha.command("CallEngine", caller=ADMIN_ACCOUNT_ID, input=bytecode)]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    net.send_tx(tx)
    hex_hash = binascii.hexlify(IrohaCrypto.hash(tx))
    for status in net.tx_status_stream(tx):
        print(status)
    return hex_hash


@integration_helpers.trace
def add_coin(asset,amount):
    tx = iroha.transaction(
        [
            iroha.command(
                "AddAssetQuantity", asset_id=asset, amount=amount
            )
        ]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    response = net.send_tx(tx)
    for status in net.tx_status_stream(tx):
        print(status)
    hex_hash = binascii.hexlify(IrohaCrypto.hash(tx))
    return hex_hash

@integration_helpers.trace
def query_balance(address, account, asset):
    params = integration_helpers.get_first_four_bytes_of_keccak(
        b"queryBalance(string,string)"
    )
    no_of_param = 2
    for x in range(no_of_param):
        params = params + integration_helpers.left_padded_address_of_param(
            x, no_of_param
        )
    params = params + integration_helpers.argument_encoding(account)  # source account id
    params = params + integration_helpers.argument_encoding(asset)  # dest account id
    return params

def deploy_contract(bytecode):
    hash = create_contract(bytecode)
    address = integration_helpers.get_engine_receipts_address(hash)
    return address

def create_web3grpc_bytecode(address):
    params = integration_helpers.get_first_four_bytes_of_keccak(
        b"queryBalance(string,string)"
    )
    no_of_param = 2
    for x in range(no_of_param):
        params = params + integration_helpers.left_padded_address_of_param(
            x, no_of_param
        )
    params = params + integration_helpers.argument_encoding('admin@test')  # source account id
    params = params + integration_helpers.argument_encoding('wtr#energy')  # dest account id
    return params

# 1 deploy contract -> return adress
contract_bytecode = "608060405234801561001057600080fd5b50731fdcc92ffac72c169cceacfb6de7959f1de986946000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611024806100746000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632c74aaaf1461005c57806395256b2c1461008c578063bc53c0c4146100bc578063d4e804ab146100ec578063e048232a1461010a575b600080fd5b6100766004803603810190610071919061089e565b61013a565b6040516100839190610c36565b60405180910390f35b6100a660048036038101906100a191906109bd565b6102a9565b6040516100b39190610c36565b60405180910390f35b6100d660048036038101906100d19190610916565b610484565b6040516100e39190610c36565b60405180910390f35b6100f461064e565b6040516101019190610c1b565b60405180910390f35b610124600480360381019061011f919061089e565b610672565b6040516101319190610c36565b60405180910390f35b606060008383604051602401610151929190610c7a565b6040516020818303038152906040527f260b5d52000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516102189190610bed565b600060405180830381855af49150503d8060008114610253576040519150601f19603f3d011682016040523d82523d6000602084013e610258565b606091505b50915091508161029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610d93565b60405180910390fd5b80935050505092915050565b6060600086868686866040516024016102c6959493929190610cfd565b6040516020818303038152906040527f95256b2c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360405161038d9190610bed565b600060405180830381855af49150503d80600081146103c8576040519150601f19603f3d011682016040523d82523d6000602084013e6103cd565b606091505b509150915081610412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040990610d73565b60405180910390fd5b876040516104209190610c04565b6040518091039020896040516104369190610c04565b60405180910390207f6a739057159b3f3e2efcba00d44b0fa47de56972ed8776a2da7682bcf7c67de18760405161046d9190610c58565b60405180910390a380935050505095945050505050565b6060600084848460405160240161049d93929190610cb1565b6040516020818303038152906040527fbc53c0c4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516105649190610bed565b600060405180830381855af49150503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b5091509150816105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e090610d73565b60405180910390fd5b856040516105f79190610c04565b60405180910390208760405161060d9190610c04565b60405180910390207fb4086b7a9e5eac405225b6c630a4147f0a8dcb4af3583733b10db7b91ad21ffd60405160405180910390a38093505050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008383604051602401610689929190610c7a565b6040516020818303038152906040527fe048232a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516107509190610bed565b600060405180830381855af49150503d806000811461078b576040519150601f19603f3d011682016040523d82523d6000602084013e610790565b606091505b5091509150816107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90610d73565b60405180910390fd5b856040516107e39190610c04565b60405180910390207fd8ea495c3185a632d25d8ccc5c355aeb4058bfaaaee8647c075dc5c1ce62914c8660405161081a9190610c58565b60405180910390a280935050505092915050565b600061084161083c84610dd8565b610db3565b90508281526020810184848401111561085d5761085c610f30565b5b610868848285610e89565b509392505050565b600082601f83011261088557610884610f2b565b5b813561089584826020860161082e565b91505092915050565b600080604083850312156108b5576108b4610f3a565b5b600083013567ffffffffffffffff8111156108d3576108d2610f35565b5b6108df85828601610870565b925050602083013567ffffffffffffffff811115610900576108ff610f35565b5b61090c85828601610870565b9150509250929050565b60008060006060848603121561092f5761092e610f3a565b5b600084013567ffffffffffffffff81111561094d5761094c610f35565b5b61095986828701610870565b935050602084013567ffffffffffffffff81111561097a57610979610f35565b5b61098686828701610870565b925050604084013567ffffffffffffffff8111156109a7576109a6610f35565b5b6109b386828701610870565b9150509250925092565b600080600080600060a086880312156109d9576109d8610f3a565b5b600086013567ffffffffffffffff8111156109f7576109f6610f35565b5b610a0388828901610870565b955050602086013567ffffffffffffffff811115610a2457610a23610f35565b5b610a3088828901610870565b945050604086013567ffffffffffffffff811115610a5157610a50610f35565b5b610a5d88828901610870565b935050606086013567ffffffffffffffff811115610a7e57610a7d610f35565b5b610a8a88828901610870565b925050608086013567ffffffffffffffff811115610aab57610aaa610f35565b5b610ab788828901610870565b9150509295509295909350565b610acd81610e57565b82525050565b6000610ade82610e09565b610ae88185610e1f565b9350610af8818560208601610e98565b610b0181610f3f565b840191505092915050565b6000610b1782610e09565b610b218185610e30565b9350610b31818560208601610e98565b80840191505092915050565b6000610b4882610e14565b610b528185610e3b565b9350610b62818560208601610e98565b610b6b81610f3f565b840191505092915050565b6000610b8182610e14565b610b8b8185610e4c565b9350610b9b818560208601610e98565b80840191505092915050565b6000610bb4602783610e3b565b9150610bbf82610f50565b604082019050919050565b6000610bd7602883610e3b565b9150610be282610f9f565b604082019050919050565b6000610bf98284610b0c565b915081905092915050565b6000610c108284610b76565b915081905092915050565b6000602082019050610c306000830184610ac4565b92915050565b60006020820190508181036000830152610c508184610ad3565b905092915050565b60006020820190508181036000830152610c728184610b3d565b905092915050565b60006040820190508181036000830152610c948185610b3d565b90508181036020830152610ca88184610b3d565b90509392505050565b60006060820190508181036000830152610ccb8186610b3d565b90508181036020830152610cdf8185610b3d565b90508181036040830152610cf38184610b3d565b9050949350505050565b600060a0820190508181036000830152610d178188610b3d565b90508181036020830152610d2b8187610b3d565b90508181036040830152610d3f8186610b3d565b90508181036060830152610d538185610b3d565b90508181036080830152610d678184610b3d565b90509695505050505050565b60006020820190508181036000830152610d8c81610ba7565b9050919050565b60006020820190508181036000830152610dac81610bca565b9050919050565b6000610dbd610dce565b9050610dc98282610ecb565b919050565b6000604051905090565b600067ffffffffffffffff821115610df357610df2610efc565b5b610dfc82610f3f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000610e6282610e69565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610eb6578082015181840152602081019050610e9b565b83811115610ec5576000848401525b50505050565b610ed482610f3f565b810181811067ffffffffffffffff82111715610ef357610ef2610efc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4572726f722063616c6c696e67207365727669636520636f6e7472616374206660008201527f756e6374696f6e00000000000000000000000000000000000000000000000000602082015250565b7f4572726f722063616c6c696e67207365727669636520636f6e7472616374206660008201527f756e6374696f6e2000000000000000000000000000000000000000000000000060208201525056fea26469706673582212202bb2fe9a5d01690eacef22db23416b335edc896381b070efe9742ac1598944f264736f6c63430008070033"
address = deploy_contract(contract_bytecode)
# 2 modify state -> modify's iroha state
add_coin('wtr#energy','500')
create_account(address,'a','test')
create_account(address,'b','test')
# 3 query for state using web3grpc -> print result
web3grpc_bytecode = create_web3grpc_bytecode(address)
iroha_address = '0.0.0.0:28660'
iroha_account_sender = '"admin@test"'
sm_address = '"%s"' % address
sm_data = '"2c74aaaf00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000a61646D696E407465737400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a77747223656E6572677900000000000000000000000000000000000000000000"'
cmd_to_execute = """curl %s -X POST   -H "Content-Type: application/json"   --data '{"jsonrpc":"2.0","method":"eth_call","params":[{"from": %s, "to" :%s, "data": %s }, "latest"],"id":1}' """ % (iroha_address,iroha_account_sender, sm_address, sm_data)
os.system(cmd_to_execute)